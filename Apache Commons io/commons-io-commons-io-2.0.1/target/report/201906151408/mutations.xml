<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>61</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>63</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>69</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>61</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>63</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>65</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>67</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>69</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>62</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>64</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>66</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>68</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>70</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>concat</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>71</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testConcat(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::concat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>159</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>161</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>165</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><block>170</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>169</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>157</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>159</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>161</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>162</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>165</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>167</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>169</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>158</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>160</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>163</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>164</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>166</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>170</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>148</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>150</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>151</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>152</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>150</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>146</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>148</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>150</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>151</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>152</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>147</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>149</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>153</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doGetPath</mutatedMethod><methodDescription>(Ljava/lang/String;I)Ljava/lang/String;</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>154</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doGetPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>20</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>24</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><block>28</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>238</index><block>39</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>303</index><block>48</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>381</index><block>53</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>390</index><block>55</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><block>28</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>150</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>153</index><block>31</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>156</index><block>31</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>221</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -2 to 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>224</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>227</index><block>38</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>344</index><block>51</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>376</index><block>52</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>27</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>28</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>30</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>32</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>34</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>35</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>36</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><block>37</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>39</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><block>41</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>42</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><block>43</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>44</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>45</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><block>47</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><block>48</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><block>50</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><block>52</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><block>60</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>18</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>20</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>22</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>24</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>25</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>27</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>28</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>29</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>30</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>32</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>33</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>34</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>35</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>193</index><block>36</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><block>37</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><block>39</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>245</index><block>40</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>252</index><block>41</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><block>42</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><block>43</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>271</index><block>44</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>278</index><block>45</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><block>47</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalize(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>303</index><block>48</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>310</index><block>49</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>381</index><block>53</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>390</index><block>55</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>403</index><block>57</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>405</index><block>58</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>19</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>21</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>282</index><block>46</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>385</index><block>54</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>399</index><block>56</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>414</index><block>59</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>425</index><block>60</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::doNormalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>removed call to java/lang/String::getChars</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><block>31</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>218</index><block>38</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>324</index><block>50</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>doNormalize</mutatedMethod><methodDescription>(Ljava/lang/String;CZ)Ljava/lang/String;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>357</index><block>52</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>185</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEquals(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>189</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>190</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>191</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>192</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>195</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>196</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>197</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>199</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>194</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>200</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsNormalized</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>187</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsNormalizedOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>188</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>equalsOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>186</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getBaseName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>174</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getBaseName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>179</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>175</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>177</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>176</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>178</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>179</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getFullPath</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>155</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getFullPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getFullPathNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>156</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getFullPathNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>173</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>171</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>172</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>173</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>144</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPathNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>145</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPathNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>139</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>141</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>137</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>139</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>141</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>138</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>140</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>142</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>143</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::getPrefix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>107</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>148</index><block>108</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>100</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>105</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>125</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>85</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>87</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>89</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>91</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>92</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>94</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>97</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>98</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>99</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>101</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>103</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>106</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>107</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>108</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>109</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>110</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><block>114</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><block>115</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><block>116</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><block>117</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><block>118</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>207</index><block>119</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>121</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>123</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>126</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>86</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>88</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>90</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>93</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>96</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>94</index><block>100</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>124</index><block>105</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>162</index><block>111</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>166</index><block>112</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>170</index><block>113</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>211</index><block>120</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>241</index><block>125</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>getPrefixLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>252</index><block>128</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>134</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>132</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>134</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>133</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>136</block><killingTest>org.apache.commons.io.comparator.ExtensionFileComparatorTest.testComparator(org.apache.commons.io.comparator.ExtensionFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>129</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>130</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>indexOfLastSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>131</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>201</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>203</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>204</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>205</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>202</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>207</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>208</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>221</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>223</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>224</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>225</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>229</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>222</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>227</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>230</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/Collection;)Z</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>232</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>209</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>211</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>212</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>213</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>217</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>210</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>215</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>218</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isExtension</mutatedMethod><methodDescription>(Ljava/lang/String;[Ljava/lang/String;)Z</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>220</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSeparator</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>7</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetPath(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSystemWindows</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='120'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>isSystemWindows</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>8</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>11</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>12</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalizeNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>normalizeNoEndSeparator</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>15</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::normalizeNoEndSeparator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>180</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>182</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>181</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>183</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>removeExtension</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>184</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::removeExtension to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>80</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>82</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>81</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>83</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToSystem</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>84</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToSystem to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>72</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>73</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>74</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToUnix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToUnix</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>75</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToUnix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>76</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>77</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>78</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToWindows to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>separatorsToWindows</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>79</block><killingTest>org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(org.apache.commons.io.FilenameUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::separatorsToWindows to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>267</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><block>274</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>275</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>264</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>265</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>267</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>268</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>269</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>270</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>271</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>273</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>274</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>275</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>278</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>266</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::splitOnTokens to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>149</index><block>279</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FilenameUtils::splitOnTokens to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>splitOnTokens</mutatedMethod><methodDescription>(Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>271</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>233</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>242</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><block>243</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>245</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><block>254</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>240</index><block>262</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>245</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>220</index><block>258</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>249</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>254</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><block>258</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>235</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>236</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>238</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>239</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>241</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>242</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>243</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>244</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>245</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>248</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>249</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>251</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><block>252</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>254</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>201</index><block>256</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>259</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>231</index><block>260</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>240</index><block>262</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>237</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>240</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>235</index><block>261</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatch</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z</methodDescription><lineNumber>1323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>244</index><block>263</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FilenameUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FilenameUtils</mutatedClass><mutatedMethod>wildcardMatchOnSystem</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>1227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>234</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>22</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>24</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>26</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>23</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>24</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>25</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>26</block><killingTest/><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>27</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>22</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>24</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>26</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>byteCountToDisplaySize</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>28</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::byteCountToDisplaySize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>1988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>338</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>342</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::checksum to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>340</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksum</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;</methodDescription><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>341</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>checksumCRC32</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>337</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::checksumCRC32</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>209</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>211</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>213</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>218</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>216</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to org/apache/commons/io/FileUtils::forceDelete</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>274</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>276</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>278</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>283</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>cleanDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>281</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceDeleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>57</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>59</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>61</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>62</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>64</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>66</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>58</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>60</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>65</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>67</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>100</index><block>68</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>68</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><block>68</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>69</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testContentEquals(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>69</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>convertFileCollectionToFileArray</mutatedMethod><methodDescription>(Ljava/util/Collection;)[Ljava/io/File;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>33</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/FileUtils::convertFileCollectionToFileArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>150</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>152</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>167</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>153</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>155</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>157</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>159</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>161</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>163</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1046</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>164</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>166</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>167</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><block>170</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>151</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>139</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>141</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>142</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>144</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>146</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>147</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>149</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>107</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>108</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>110</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>112</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>114</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>116</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>118</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>119</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>120</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>122</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><block>123</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>125</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>100</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>101</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>103</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>104</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>106</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyInputStreamToFile</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/File;)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>192</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyInputStreamToFile</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/File;)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>193</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyInputStreamToFile</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/File;)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>194</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyInputStreamToFile</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/File;)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>195</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;)V</methodDescription><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>190</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyInputStreamToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>191</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to java/net/URLConnection::setConnectTimeout</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>191</block><killingTest/><description>removed call to java/net/URLConnection::setReadTimeout</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>copyURLToFile</mutatedMethod><methodDescription>(Ljava/net/URL;Ljava/io/File;II)V</methodDescription><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>191</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyInputStreamToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>75</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>76</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>78</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>80</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><block>82</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>136</index><block>84</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><block>78</block><killingTest/><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>86</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>78</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>78</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>74</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>75</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>76</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>77</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>78</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>79</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>80</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>82</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>84</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>177</index><block>87</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::decodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='142'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>197</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>199</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>200</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>200</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to org/apache/commons/io/FileUtils::cleanDirectory</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>270</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>272</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>273</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::cleanDirectoryOnExit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteDirectoryOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>273</block><killingTest/><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>203</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>205</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>204</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>207</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>208</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>deleteQuietly</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>206</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::cleanDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>171</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>173</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>175</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>176</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>178</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>180</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>183</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>184</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>185</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>188</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><block>186</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><block>187</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::doCopyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>129</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><block>130</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>130</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>132</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>132</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>126</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>127</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>129</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>130</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>135</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>137</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>133</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>133</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>122</index><block>133</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><block>133</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>134</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>134</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>134</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>doCopyFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><block>134</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>260</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>262</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>263</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDelete</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>261</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::deleteDirectory</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>267</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>268</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::deleteDirectoryOnExit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceDeleteOnExit</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>269</block><killingTest/><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>286</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testForceMkdir(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>287</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>289</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>forceMkdir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>290</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getTempDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getTempDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getTempDirectoryPath</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getTempDirectoryPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getUserDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getUserDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>getUserDirectoryPath</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::getUserDirectoryPath to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>34</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>36</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>innerListFiles</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>37</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::innerListFiles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>319</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>315</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>317</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>319</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>318</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>321</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>307</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>309</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>311</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>1857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>312</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileNewer</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>1860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>314</block><killingTest>org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(org.apache.commons.io.FileUtilsFileNewerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>334</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>330</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>332</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>334</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>333</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;J)Z</methodDescription><lineNumber>1949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>336</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>322</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>324</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)Z</methodDescription><lineNumber>1908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>326</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>1924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>327</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isFileOlder</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Date;)Z</methodDescription><lineNumber>1927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>329</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>404</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>406</block><killingTest>org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(org.apache.commons.io.FileUtilsCleanSymlinksTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>408</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>410</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>407</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>411</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>isSymlink</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>2207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>412</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>iterateFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>47</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testIterateFiles(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::iterateFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>iterateFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Iterator;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>56</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::iterateFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>240</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>237</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>238</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>239</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>40</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>42</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>44</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>46</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>46</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::innerListFiles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>51</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>53</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>55</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>343</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>345</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>347</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>349</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>351</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>353</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>354</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>354</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>354</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::deleteDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>357</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>359</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>361</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>362</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>363</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>365</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveDirectoryToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>367</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>368</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>370</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>372</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>374</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>376</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>378</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>380</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>381</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)V</methodDescription><lineNumber>2106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>121</index><block>381</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::copyFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>384</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>386</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>388</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>389</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>390</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>392</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveFileToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>394</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>395</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>397</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>399</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>401</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>402</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveDirectoryToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>moveToDirectory</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;Z)V</methodDescription><lineNumber>2174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>403</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::moveFileToDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openInputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileInputStream;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>11</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::openInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>17</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>18</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>19</block><killingTest>org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>openOutputStream</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/io/FileOutputStream;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>21</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::openOutputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToByteArray</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>232</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readFileToByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToByteArray</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>232</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToByteArray</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>233</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/lang/String;</methodDescription><lineNumber>1344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>231</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readFileToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>229</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readFileToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>229</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readFileToString</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>230</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/util/List;</methodDescription><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>236</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>234</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>234</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>235</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testReadLines(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>293</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>295</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>296</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOf</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>297</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>305</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>298</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>300</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>302</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>303</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOfDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>sizeOfDirectory</mutatedMethod><methodDescription>(Ljava/io/File;)J</methodDescription><lineNumber>1816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><block>306</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testSizeOf(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileUtils::sizeOfDirectory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>70</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>71</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>72</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFile</mutatedMethod><methodDescription>(Ljava/net/URL;)Ljava/io/File;</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>73</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFile4(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>91</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>88</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>89</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>91</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>92</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>93</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>90</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles3(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toFiles</mutatedMethod><methodDescription>([Ljava/net/URL;)[Ljava/io/File;</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>96</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToFiles2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>48</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>48</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toSuffixes</mutatedMethod><methodDescription>([Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>50</block><killingTest>org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(org.apache.commons.io.FileUtilsListFilesTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toSuffixes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>97</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs1(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>97</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs1(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>toURLs</mutatedMethod><methodDescription>([Ljava/io/File;)[Ljava/net/URL;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>99</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testToURLs1(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileUtils::toURLs to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>29</block><killingTest>org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(org.apache.commons.io.FileUtilsCleanDirectoryTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>30</block><killingTest>org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(org.apache.commons.io.FileUtilsCleanDirectoryTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>touch</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>30</block><killingTest>org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(org.apache.commons.io.FileUtilsCleanDirectoryTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>222</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>223</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>17</index><block>222</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>223</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>221</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>222</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>223</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>224</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>228</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>waitFor</mutatedMethod><methodDescription>(Ljava/io/File;I)Z</methodDescription><lineNumber>1302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>225</block><killingTest>org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(org.apache.commons.io.FileUtilsWaitForTestCase)</killingTest><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;)V</methodDescription><lineNumber>1501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>245</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;)V</methodDescription><lineNumber>1502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>247</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V</methodDescription><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>248</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V</methodDescription><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>250</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[B)V</methodDescription><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>251</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[B)V</methodDescription><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>251</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeByteArrayToFile</mutatedMethod><methodDescription>(Ljava/io/File;[B)V</methodDescription><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>252</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;)V</methodDescription><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>254</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>256</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>256</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>257</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>255</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;)V</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>259</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)V</methodDescription><lineNumber>1489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>244</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/FileUtils::writeStringToFile</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>1475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>241</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>1477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>241</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='18'><sourceFile>FileUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileUtils</mutatedClass><mutatedMethod>writeStringToFile</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>1477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>242</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>32</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>34</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedDouble</mutatedMethod><methodDescription>(Ljava/io/InputStream;)D</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>31</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedDouble</mutatedMethod><methodDescription>([BI)D</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>17</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedFloat</mutatedMethod><methodDescription>(Ljava/io/InputStream;)F</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedFloat</mutatedMethod><methodDescription>([BI)F</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>15</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::readSwappedFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>22</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>22</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>10</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedInteger</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>10</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>25</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>25</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>27</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedLong</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>13</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>13</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>13</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedLong</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>13</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>19</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>19</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>19</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>19</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)S</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>19</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>7</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>7</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedShort</mutatedMethod><methodDescription>([BI)S</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>7</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>23</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>(Ljava/io/InputStream;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>23</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedUnsignedInteger</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>11</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>11</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedInteger</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>11</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::readSwappedUnsignedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>20</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>20</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>20</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>20</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>20</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>20</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>8</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>readSwappedUnsignedShort</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>8</block><killingTest>org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapDouble</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>5</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/EndianUtils::swapDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapFloat</mutatedMethod><methodDescription>(F)F</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/EndianUtils::swapFloat</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>2</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapInteger</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>3</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>3</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapLong</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>3</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/EndianUtils::swapLong</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>swapShort</mutatedMethod><methodDescription>(S)S</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSwapShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedDouble</mutatedMethod><methodDescription>(Ljava/io/OutputStream;D)V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>30</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedDouble</mutatedMethod><methodDescription>([BID)V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>16</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedFloat</mutatedMethod><methodDescription>(Ljava/io/OutputStream;F)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedFloat</mutatedMethod><methodDescription>([BIF)V</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>14</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to org/apache/commons/io/EndianUtils::writeSwappedInteger</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>21</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>(Ljava/io/OutputStream;I)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>21</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>9</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>9</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedInteger</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>9</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>24</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>(Ljava/io/OutputStream;J)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>24</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>12</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>12</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedLong</mutatedMethod><methodDescription>([BIJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>12</block><killingTest>org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>18</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>(Ljava/io/OutputStream;S)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>6</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>6</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EndianUtils.java</sourceFile><mutatedClass>org.apache.commons.io.EndianUtils</mutatedClass><mutatedMethod>writeSwappedShort</mutatedMethod><methodDescription>([BIS)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(org.apache.commons.io.EndianUtilsTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Closeable;)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReaderToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/io/Writer;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/Socket;)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Ljava/net/Socket;)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>9</block><killingTest/><description>removed call to java/net/Socket::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>124</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>125</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>126</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>127</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>130</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>128</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/InputStream;)Z</methodDescription><lineNumber>1470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>132</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>133</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>134</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>135</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>136</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>139</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>137</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>contentEquals</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Reader;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>141</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>1237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>104</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>1237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>104</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>1238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>105</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>1240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>106</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>1311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>111</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>1312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>112</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>120</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>121</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>122</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>123</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>114</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReaderToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>114</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>115</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>1344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>116</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>1264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>108</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>1262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>107</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>1266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>109</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>1263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>108</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)J</methodDescription><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>118</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)J</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>117</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)J</methodDescription><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>119</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::copyLarge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>copyLarge</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)J</methodDescription><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>118</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>34</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>36</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>lineIterator</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/io/LineIterator;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>33</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::lineIterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/util/List;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>26</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>27</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>28</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>29</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/util/List;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>30</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/util/List;</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>32</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::readLines to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>142</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>145</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>146</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>148</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>149</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>142</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>144</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>145</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>146</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>1548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>149</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>150</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>153</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>154</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>156</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>157</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>150</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>152</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>153</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>154</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/Reader;J)J</methodDescription><lineNumber>1589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>157</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/IOUtils::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>158</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>158</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)V</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>160</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>skipFully</mutatedMethod><methodDescription>(Ljava/io/Reader;J)V</methodDescription><lineNumber>1634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>163</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testSkipReader(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>12</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;)[B</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>13</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;)[B</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/lang/String;)[B</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/lang/String;)[B</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[C</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>16</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[C</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>16</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)[C</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>17</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)[C</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>17</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toCharArray</mutatedMethod><methodDescription>(Ljava/io/Reader;)[C</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>18</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toCharArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/InputStream;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>37</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>38</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>39</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>40</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>42</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>19</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>19</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>20</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>20</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::copy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/io/Reader;)Ljava/lang/String;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>21</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testReaderToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>22</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>24</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>25</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/IOUtils::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>61</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>62</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>63</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>64</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/Writer;)V</methodDescription><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>59</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/io/Writer;)V</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>60</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>67</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>68</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>69</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>70</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>71</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>72</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>65</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>66</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>75</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>76</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>77</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>78</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>79</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>80</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;)V</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>73</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;)V</methodDescription><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>74</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>43</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/OutputStream;)V</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>44</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;)V</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>45</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;)V</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>46</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>47</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>48</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>49</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BLjava/io/Writer;Ljava/lang/String;)V</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>50</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;)V</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>53</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;)V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>54</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>55</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>56</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>57</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>58</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>51</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CLjava/io/Writer;)V</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>52</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>81</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>83</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>85</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>86</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>86</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>88</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>90</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>92</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>94</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>89</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::writeLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>95</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>95</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>97</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>99</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>101</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>102</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.io.IOUtils</mutatedClass><mutatedMethod>writeLines</mutatedMethod><methodDescription>(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V</methodDescription><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>102</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/net/URLConnection;Ljava/lang/String;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/net/URLConnection;Ljava/lang/String;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>62</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>63</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>65</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>66</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>68</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>69</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>71</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>74</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>75</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><block>76</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><block>79</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>80</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>81</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>64</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>91</index><block>70</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>73</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>160</index><block>78</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>178</index><block>82</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateHttpEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>221</index><block>84</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateHttpEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>33</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>34</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>35</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>38</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>39</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>40</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>43</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>44</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>45</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>47</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>48</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>51</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>140</index><block>52</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>53</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>54</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>56</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>185</index><block>57</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><block>58</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>37</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>41</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>42</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>130</index><block>50</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>calculateRawEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>222</index><block>60</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::calculateRawEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>15</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>21</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>20</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doHttpStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doHttpStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>22</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doHttpStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>27</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>28</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>29</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>26</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doLenientDetection to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doLenientDetection</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>31</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doLenientDetection to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>17</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>16</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doRawStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>doRawStream</mutatedMethod><methodDescription>(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>18</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::doRawStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>90</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>91</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>89</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>90</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>91</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>93</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>95</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getContentTypeEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>86</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>85</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>86</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getContentTypeMime</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>88</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getContentTypeMime to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getDefaultEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getDefaultEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>99</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><block>105</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>100</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>100</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>106</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>109</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>96</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>97</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>98</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>99</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>101</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>102</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><block>105</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>106</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>190</index><block>108</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>211</index><block>109</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/XmlStreamReader::getXmlProlog to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>97</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>getXmlProlog</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>106</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>110</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>111</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>112</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>113</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>114</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>115</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isAppXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>117</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>118</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>119</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>120</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>121</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>122</block><killingTest>org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.testTextXml(org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>isTextXml</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>124</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>XmlStreamReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.XmlStreamReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpace</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>5</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceKb</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceKb</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>9</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>8</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>10</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>11</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceOS</mutatedMethod><methodDescription>(Ljava/lang/String;IZJ)J</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>12</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceOS</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><block>45</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><block>47</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>151</index><block>49</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>41</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>42</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>45</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>47</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>48</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>49</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceUnix</mutatedMethod><methodDescription>(Ljava/lang/String;ZZJ)J</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>218</index><block>52</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceUnix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>15</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>17</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>20</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>17</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>15</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>16</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>17</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>18</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>freeSpaceWindows</mutatedMethod><methodDescription>(Ljava/lang/String;J)J</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>19</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::freeSpaceWindows</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>openProcess</mutatedMethod><methodDescription>([Ljava/lang/String;)Ljava/lang/Process;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>69</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileSystemUtils::openProcess to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>53</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>53</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>55</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::parseBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>26</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><block>34</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>25</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>31</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><block>37</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>24</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>30</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>22</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>23</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>26</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>27</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>28</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>29</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>32</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>34</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>35</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>36</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>parseDir</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)J</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>151</index><block>38</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/FileSystemUtils::parseDir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>58</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>57</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>58</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>60</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><block>62</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><block>64</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>233</index><block>67</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>186</index><block>65</block><killingTest>org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(org.apache.commons.io.FileSystemUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/FileSystemUtils::performCommand to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>60</block><killingTest/><description>removed call to org/apache/commons/io/ThreadMonitor::stop</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><block>64</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><block>64</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><block>64</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><block>64</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><block>65</block><killingTest/><description>removed call to java/lang/Process::destroy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>217</index><block>67</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>221</index><block>67</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>225</index><block>67</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>229</index><block>67</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>FileSystemUtils.java</sourceFile><mutatedClass>org.apache.commons.io.FileSystemUtils</mutatedClass><mutatedMethod>performCommand</mutatedMethod><methodDescription>([Ljava/lang/String;IJ)Ljava/util/List;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>237</index><block>68</block><killingTest/><description>removed call to java/lang/Process::destroy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='112'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(org.apache.commons.io.output.ProxyOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>3</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>6</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>7</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>7</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>10</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='93'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>10</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>10</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>needNewBuffer</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>43</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>40</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>43</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>41</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>()Ljava/io/InputStream;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>46</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toBufferedInputStream</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/io/InputStream;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>39</block><killingTest>org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(org.apache.commons.io.IOUtilsTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toBufferedInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>50</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>50</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>47</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>50</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>48</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>53</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>50</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>55</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/ByteArrayOutputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>25</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='86'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>26</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>26</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>26</block><killingTest/><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>28</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>29</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>27</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>86</index><block>30</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/io/InputStream;)I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>29</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>14</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>15</block><killingTest>org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(org.apache.commons.io.IOUtilsWriteTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>20</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='57'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>14</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>15</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>19</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>19</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>20</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>20</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>20</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>20</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>14</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>15</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>17</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>19</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>20</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>20</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>21</block><killingTest>org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(org.apache.commons.io.IOUtilsCopyTestCase)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::needNewBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>35</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>35</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteArrayOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ByteArrayOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>35</block><killingTest>org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(org.apache.commons.io.output.ByteArrayOutputStreamTestCase)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>6</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>8</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>10</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>addListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>17</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>32</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>34</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>33</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>35</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>36</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onStop</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>38</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>41</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>42</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>44</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><block>48</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><block>46</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><block>49</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>38</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>41</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>42</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>44</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>45</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>48</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>43</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><block>46</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>46</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>47</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>47</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><block>49</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>checkAndNotify</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>50</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>51</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>53</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>51</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>53</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>55</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::createFileEntry to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>createFileEntry</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>55</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>57</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>58</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>59</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doCreate</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>61</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::doCreate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>70</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>71</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doDelete</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;)V</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>72</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileDelete</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>63</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>65</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>66</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onDirectoryChange</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>doMatch</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>67</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationListener::onFileChange</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>getDirectory</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::getDirectory to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>getListeners</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::getListeners to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><block>28</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileEntry::setChildren</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>79</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>74</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>75</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>77</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>78</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>79</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>80</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::listFiles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>listFiles</mutatedMethod><methodDescription>(Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>80</block><killingTest/><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>removeListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>19</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>removeListener</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationListener;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>81</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationObserver.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationObserver</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>82</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationObserver::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>49</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>50</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>53</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>51</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>ageFileFilter</mutatedMethod><methodDescription>(Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>52</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::ageFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>and</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>35</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::and to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>andFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>33</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::andFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>asFileFilter</mutatedMethod><methodDescription>(Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>47</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::asFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>asFileFilter</mutatedMethod><methodDescription>(Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>48</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::asFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>directoryFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::directoryFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>falseFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>46</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::falseFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>fileFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::fileFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>11</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>8</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>10</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterList</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>12</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterList</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterSet</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterSet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>filterSet</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::filterSet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>58</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>59</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>([B)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>60</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>magicNumberFileFilter</mutatedMethod><methodDescription>([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>61</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::magicNumberFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>62</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>63</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeCVSAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeCVSAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>64</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeCVSAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>68</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>69</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeDirectoryOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeDirectoryOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>70</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeDirectoryOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>71</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>72</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeFileOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeFileOnly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>73</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeFileOnly to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>65</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>66</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeSVNAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>makeSVNAware</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>67</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::makeSVNAware to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>nameFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>29</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::nameFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>nameFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>30</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::nameFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>notFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>44</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNot(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::notFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>or</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>36</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::or to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>orFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>34</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::orFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>prefixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::prefixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>prefixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>26</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::prefixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeFileFilter</mutatedMethod><methodDescription>(J)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>55</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeFileFilter</mutatedMethod><methodDescription>(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>56</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeRangeFileFilter</mutatedMethod><methodDescription>(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>57</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>sizeRangeFileFilter</mutatedMethod><methodDescription>(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>57</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::sizeRangeFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>suffixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::suffixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>suffixFileFilter</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>28</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::suffixFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>39</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>37</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>39</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>40</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>toList</mutatedMethod><methodDescription>([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>43</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::toList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileFilterUtils.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.FileFilterUtils</mutatedClass><mutatedMethod>trueFileFilter</mutatedMethod><methodDescription>()Lorg/apache/commons/io/filefilter/IOFileFilter;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>45</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/FileFilterUtils::trueFileFilter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>34</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>35</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>find</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>37</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::find to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>19</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>20</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>20</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>19</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>20</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>22</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>23</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOM</mutatedMethod><methodDescription>()Lorg/apache/commons/io/ByteOrderMark;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>107</index><block>26</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::getBOM to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOMCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>27</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>getBOMCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>29</block><killingTest>org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(org.apache.commons.io.input.XmlStreamReaderUtilitiesTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/BOMInputStream::getBOMCharsetName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>9</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>10</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>12</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>13</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>hasBOM</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>15</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>58</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>60</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>40</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>38</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>40</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>41</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>39</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>42</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>matches</mutatedMethod><methodDescription>(Lorg/apache/commons/io/ByteOrderMark;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>44</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>45</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testHttp(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>45</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>47</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>57</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>48</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>49</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>50</block><killingTest>org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(org.apache.commons.io.input.XmlStreamReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>52</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>53</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><block>51</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><block>51</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>51</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>51</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>56</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>48</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>49</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>50</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>52</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>53</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>56</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>30</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>31</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>30</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>readFirstBytes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>32</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>61</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>62</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>63</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>64</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>65</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>63</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>64</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BOMInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BOMInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>66</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/BOMInputStream::skip</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>6</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>8</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>41</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>43</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::getSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>processByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>39</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>18</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>16</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>17</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testRead(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>18</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testEOFException(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>19</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>24</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>22</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>24</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>23</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>25</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/NullInputStream::processBytes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>30</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>28</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>30</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>37</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>33</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>35</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>37</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>36</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>38</block><killingTest>org.apache.commons.io.input.NullInputStreamTest.testSkip(org.apache.commons.io.input.NullInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>22</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>23</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>22</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>24</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/HexDump::dump to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>19</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>20</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>20</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>19</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>21</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/HexDump::dump to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>93</index><block>8</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><block>9</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>12</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>170</index><block>16</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>203</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Changed increment from 16 to -16</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>7</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>10</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>15</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>4</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>6</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>7</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>8</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>9</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>12</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>13</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>14</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>184</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>188</index><block>17</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HexDump.java</sourceFile><mutatedClass>org.apache.commons.io.HexDump</mutatedClass><mutatedMethod>dump</mutatedMethod><methodDescription>([BJLjava/io/OutputStream;I)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>193</index><block>17</block><killingTest>org.apache.commons.io.HexDumpTest.testDump(org.apache.commons.io.HexDumpTest)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Ljava/io/Writer;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>2</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>7</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Ljava/io/Writer;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>3</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>4</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/ProxyWriter::append to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)Ljava/io/Writer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>22</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>23</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>20</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>21</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>8</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>15</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testNullString(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>16</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testWriteString(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>17</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>18</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>19</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>11</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>13</block><killingTest>org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(org.apache.commons.io.output.ProxyWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyWriter::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>36</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>doEndOfFile</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>38</block><killingTest>org.apache.commons.io.input.NullReaderTest.testRead(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::getPosition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::getSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>processChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>34</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>13</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>12</block><killingTest>org.apache.commons.io.input.NullReaderTest.testRead(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>13</block><killingTest>org.apache.commons.io.input.NullReaderTest.testEOFException(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>19</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>17</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>19</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>18</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>20</block><killingTest>org.apache.commons.io.input.NullReaderTest.testReadCharArray(org.apache.commons.io.input.NullReaderTest)</killingTest><description>removed call to org/apache/commons/io/input/NullReader::processChars</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>25</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>23</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>25</block><killingTest>org.apache.commons.io.input.NullReaderTest.testMarkAndReset(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>32</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>28</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>30</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>32</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>31</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NullReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.NullReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>33</block><killingTest>org.apache.commons.io.input.NullReaderTest.testSkip(org.apache.commons.io.input.NullReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/NullReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>24</block><killingTest/><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>isPropagateClose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>28</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>26</block><killingTest/><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>5</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>11</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>14</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>7</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>10</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>14</block><killingTest>org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(org.apache.commons.io.input.BoundedInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>25</block><killingTest/><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>16</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>17</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>17</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/BoundedInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BoundedInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.BoundedInputStream</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>22</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/BoundedInputStream::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>19</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>21</block><killingTest/><description>removed call to java/io/Reader::mark</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>22</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>4</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>13</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(org.apache.commons.io.input.ProxyReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([C)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::beforeRead</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>10</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>17</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>ready</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>23</block><killingTest/><description>removed call to java/io/Reader::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>15</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>16</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>16</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyReader::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>12</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>14</block><killingTest>org.apache.commons.io.comparator.NameFileComparatorTest.testSortArray(org.apache.commons.io.comparator.NameFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkCompareTo</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>16</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>28</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>26</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEndsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>28</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>17</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>18</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>20</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>22</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>29</block><killingTest>org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(org.apache.commons.io.FilenameUtilsWildcardTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>30</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><block>33</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>29</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>29</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>30</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>31</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>32</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkIndexOf</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)I</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>34</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkRegionMatches</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>35</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkRegionMatches</mutatedMethod><methodDescription>(Ljava/lang/String;ILjava/lang/String;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>37</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkStartsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>23</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>checkStartsWith</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>25</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::forName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::forName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>forName</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>5</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_forName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::forName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_getName(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>isCaseSensitive</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(org.apache.commons.io.IOCaseTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>readResolve</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_serialization(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::readResolve to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOCase.java</sourceFile><mutatedClass>org.apache.commons.io.IOCase</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>38</block><killingTest>org.apache.commons.io.IOCaseTestCase.test_toString(org.apache.commons.io.IOCaseTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/IOCase::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>8</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>7</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>8</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testRead(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>14</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>16</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>19</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><block>19</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>14</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>19</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>11</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>13</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>14</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>16</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>17</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>10</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([CII)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>20</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>26</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>26</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>25</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CharSequenceReader::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>26</block><killingTest>org.apache.commons.io.input.CharSequenceReaderTest.testSkip(org.apache.commons.io.input.CharSequenceReaderTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/CharSequenceReader::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceReader.java</sourceFile><mutatedClass>org.apache.commons.io.input.CharSequenceReader</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/CharSequenceReader::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>2</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::init</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/input/Tailer::create to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::setDaemon</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFile(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>getDelay</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/Tailer::getDelay</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/input/Tailer::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>31</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>33</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/Tailer::readLines</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>readLines</mutatedMethod><methodDescription>(Ljava/io/RandomAccessFile;)J</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>32</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><block>18</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>21</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>8</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>9</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>11</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>14</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>17</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>18</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>21</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>23</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>11</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::fileNotFound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>12</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>16</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>19</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/input/TailerListener::fileRotated</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>19</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::fileNotFound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><block>24</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>185</index><block>24</block><killingTest>org.apache.commons.io.input.TailerTest.testTailer(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>198</index><block>26</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>210</index><block>27</block><killingTest/><description>removed call to org/apache/commons/io/input/TailerListener::handle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>214</index><block>27</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Tailer.java</sourceFile><mutatedClass>org.apache.commons.io.input.Tailer</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>223</index><block>28</block><killingTest>org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(org.apache.commons.io.input.TailerTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/OutputStream;Ljava/lang/String;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>1</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>9</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>9</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>157</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>12</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>13</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>17</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>23</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>23</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>13</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>14</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>15</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>16</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>21</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>13</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/StringWriter::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><block>22</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>detectEncoding</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>169</index><block>23</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>11</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>getDefaultEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/output/XmlStreamWriter::getDefaultEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/XmlStreamWriter::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>25</block><killingTest>org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(org.apache.commons.io.output.XmlStreamWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/XmlStreamWriter::detectEncoding</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XmlStreamWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.XmlStreamWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>26</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>5</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>checkIfCancelled</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>26</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>filterDirectoryContents</mutatedMethod><methodDescription>(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>34</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>mutated return of Object value for org/apache/commons/io/DirectoryWalker::filterDirectoryContents to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>handleDirectory</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)Z</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>32</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>handleIsCancelled</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>29</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>15</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>16</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>15</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>14</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>15</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>16</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>17</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilter(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>19</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>22</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='33'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='27'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>15</block><killingTest>org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(org.apache.commons.io.FileUtilsTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleDirectoryStart</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='27'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>17</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleRestricted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>23</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::walk</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>116</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>24</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilter(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleFile</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>24</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><block>25</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleDirectoryEnd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;ILjava/util/Collection;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>148</index><block>25</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::checkIfCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='33'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>12</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::walk</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='33'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/DirectoryWalker::handleEnd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectoryWalker.java</sourceFile><mutatedClass>org.apache.commons.io.DirectoryWalker</mutatedClass><mutatedMethod>walk</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/util/Collection;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>13</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(org.apache.commons.io.DirectoryWalkerTestCaseJava4)</killingTest><description>removed call to org/apache/commons/io/DirectoryWalker::handleCancelled</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>13</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>14</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to java/io/InputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>16</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>mark</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/InputStream::mark</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>20</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>3</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>3</block><killingTest>org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(org.apache.commons.io.input.AutoCloseInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>4</block><killingTest>org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(org.apache.commons.io.input.TaggedInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>7</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testCounting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>7</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testCounting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testCounting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::beforeRead</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>9</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testCounting(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/ProxyInputStream::afterRead</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>10</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(org.apache.commons.io.input.TeeInputStreamTest)</killingTest><description>removed call to java/io/InputStream::reset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>19</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>11</block><killingTest>org.apache.commons.io.input.CountingInputStreamTest.testSkipping(org.apache.commons.io.input.CountingInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>12</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/input/ProxyInputStream::skip</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ProxyInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/input/ProxyInputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>3</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[I)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>6</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>17</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>15</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>17</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>18</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>14</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>16</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>19</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>21</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>9</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testGet(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>10</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>10</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>12</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::getBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>getCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::getCharsetName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>23</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>24</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>length</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testEquals(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>25</block><killingTest>org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(org.apache.commons.io.input.BOMInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>26</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>27</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>25</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>26</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ByteOrderMark.java</sourceFile><mutatedClass>org.apache.commons.io.ByteOrderMark</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>28</block><killingTest>org.apache.commons.io.ByteOrderMarkTestCase.testToString(org.apache.commons.io.ByteOrderMarkTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/ByteOrderMark::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>10</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>8</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>removed call to org/apache/commons/io/FileUtils::forceMkdir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/FileUtils::forceMkdir</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>11</block><killingTest/><description>removed call to org/apache/commons/io/output/LockableFileWriter::testLockDir</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>11</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>removed call to org/apache/commons/io/output/LockableFileWriter::createLock</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>30</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>createLock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>17</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>createLock</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>19</block><killingTest/><description>removed call to java/io/File::deleteOnExit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>38</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>22</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>25</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>29</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/LockableFileWriter::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>25</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>25</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>27</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>27</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>testLockDir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>testLockDir</mutatedMethod><methodDescription>(Ljava/io/File;)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>14</block><killingTest>org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(org.apache.commons.io.output.LockableFileWriterTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>33</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>36</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>37</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>34</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LockableFileWriter.java</sourceFile><mutatedClass>org.apache.commons.io.output.LockableFileWriter</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>35</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/AndFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/AndFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>12</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>16</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>22</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilterBuiltUsingAdd(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>23</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilterBuiltUsingAdd(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>25</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilterBuiltUsingAdd(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>getFileFilters</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.io.filefilter.AndFileFilterTestCase.testAdd(org.apache.commons.io.filefilter.AndFileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/AndFileFilter::getFileFilters to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>removeFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>setFileFilters</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>27</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AndFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.AndFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>32</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/AndFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getChildren</mutatedMethod><methodDescription>()[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getChildren</mutatedMethod><methodDescription>()[Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>24</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getChildren to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>26</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLastModified</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>29</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileEntry::getLastModified</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLength</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileEntry::getLength</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>21</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getLevel</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>27</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>getParent</mutatedMethod><methodDescription>()Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>18</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::getParent to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>isDirectory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>35</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>isExists</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>33</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>newChildInstance</mutatedMethod><methodDescription>(Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileEntry::newChildInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>6</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>11</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>12</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>13</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>FileEntry.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileEntry</mutatedClass><mutatedMethod>refresh</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>16</block><killingTest>org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(org.apache.commons.io.monitor.FileAlterationObserverTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>24</block><killingTest/><description>removed call to java/io/Reader::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>23</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>21</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>23</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>20</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>7</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>7</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>7</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>13</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>9</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>11</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>16</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>17</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReaderInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.ReaderInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>165</index><block>19</block><killingTest>org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(org.apache.commons.io.input.ReaderInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>checkThreshold</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>14</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::thresholdReached</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>6</block><killingTest/><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>4</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>getByteCount</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/io/output/ThresholdingOutputStream::getByteCount</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>getThreshold</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>isThresholdExceeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>11</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest/><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::checkThreshold</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ThresholdingOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ThresholdingOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;J)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BJ)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>17</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>93</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/io/RandomAccessFile::seek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>22</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MagicNumberFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.MagicNumberFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>25</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/MagicNumberFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/OrFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to org/apache/commons/io/filefilter/OrFileFilter::addFileFilter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>16</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>18</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testOr(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>21</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testNoFilters(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>getFileFilters</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.io.filefilter.OrFileFilterTestCase.testAdd(org.apache.commons.io.filefilter.OrFileFilterTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/filefilter/OrFileFilter::getFileFilters to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>removeFileFilter</mutatedMethod><methodDescription>(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>setFileFilters</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>OrFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.OrFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/OrFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>12</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::processInput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>12</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTest/><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testFlush(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>11</block><killingTest/><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>flushOutput</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>20</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>15</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>processInput</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>14</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>10</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testFlush(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::write</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>6</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>7</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testFlush(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/WriterOutputStream::processInput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WriterOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.WriterOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>8</block><killingTest>org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(org.apache.commons.io.output.WriterOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/WriterOutputStream::flushOutput</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SuffixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.SuffixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>32</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/SuffixFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>19</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>20</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilter(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>22</block><killingTest>org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(org.apache.commons.io.DirectoryWalkerTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>NameFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.NameFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>32</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/NameFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>4</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationMonitor::addObserver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>addObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>getInterval</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/monitor/FileAlterationMonitor::getInterval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>getObservers</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/monitor/FileAlterationMonitor::getObservers to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>removeObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>removeObserver</mutatedMethod><methodDescription>(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>28</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>31</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>30</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::checkAndNotify</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>33</block><killingTest/><description>removed call to java/lang/Thread::sleep</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>15</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>19</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>18</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::initialize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>21</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>removed call to java/lang/Thread::start</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(org.apache.commons.io.monitor.FileAlterationMonitorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>24</block><killingTest/><description>removed call to java/lang/Thread::join</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>25</block><killingTest/><description>removed call to java/lang/Thread::interrupt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>FileAlterationMonitor.java</sourceFile><mutatedClass>org.apache.commons.io.monitor.FileAlterationMonitor</mutatedClass><mutatedMethod>stop</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>26</block><killingTest/><description>removed call to org/apache/commons/io/monitor/FileAlterationObserver::destroy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>32</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/WildcardFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readBoolean</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readBoolean</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readByte</mutatedMethod><methodDescription>()B</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readChar</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readDouble</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/io/input/SwappedDataInputStream::readDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFloat</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of float value with -(x + 1) for org/apache/commons/io/input/SwappedDataInputStream::readFloat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>removed call to org/apache/commons/io/input/SwappedDataInputStream::readFully</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>12</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>10</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readInt</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>14</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readLong</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>16</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/io/input/SwappedDataInputStream::readLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readShort</mutatedMethod><methodDescription>()S</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readUnsignedByte</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>18</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>readUnsignedShort</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(org.apache.commons.io.input.SwappedDataInputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SwappedDataInputStream.java</sourceFile><mutatedClass>org.apache.commons.io.input.SwappedDataInputStream</mutatedClass><mutatedMethod>skipBytes</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>21</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>15</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>9</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>19</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>22</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>24</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>25</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>27</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PrefixFileFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.PrefixFileFilter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>32</block><killingTest/><description>mutated return of Object value for org/apache/commons/io/filefilter/PrefixFileFilter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>0</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testConstructor(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>2</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextWithException(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/LineIterator;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>22</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testMissingFile(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>closeQuietly</mutatedMethod><methodDescription>(Lorg/apache/commons/io/LineIterator;)V</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>23</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/LineIterator::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextWithException(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextWithException(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>9</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>11</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>6</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>8</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>10</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>12</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>14</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testNextWithException(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>removed call to org/apache/commons/io/LineIterator::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>isValidLine</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>15</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/LineIterator::next to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>nextLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LineIterator.java</sourceFile><mutatedClass>org.apache.commons.io.LineIterator</mutatedClass><mutatedMethod>nextLine</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>19</block><killingTest>org.apache.commons.io.LineIteratorTestCase.testCloseEarly(org.apache.commons.io.LineIteratorTestCase)</killingTest><description>mutated return of Object value for org/apache/commons/io/LineIterator::nextLine to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>32</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>12</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>14</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>16</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>18</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>21</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>137</index><block>25</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/FileWriterWithEncoding::initWriter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>21</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>21</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>116</index><block>23</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>initWriter</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>120</index><block>23</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>26</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(org.apache.commons.io.output.FileWriterWithEncodingTest)</killingTest><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(Ljava/lang/String;II)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>30</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>27</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>FileWriterWithEncoding.java</sourceFile><mutatedClass>org.apache.commons.io.output.FileWriterWithEncoding</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([CII)V</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>28</block><killingTest/><description>removed call to java/io/Writer::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>12</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(org.apache.commons.io.output.TaggedOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(org.apache.commons.io.output.ProxyOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>2</block><killingTest>org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(org.apache.commons.io.output.CloseShieldOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(org.apache.commons.io.output.ProxyOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><block>6</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ProxyOutputStream::beforeWrite</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>7</block><killingTest>org.apache.commons.io.output.CountingOutputStreamTest.testCounting(org.apache.commons.io.output.CountingOutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>7</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::afterWrite</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ProxyOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.ProxyOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>8</block><killingTest/><description>removed call to org/apache/commons/io/output/ProxyOutputStream::handleIOException</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>15</block><killingTest/><description>removed call to org/apache/commons/io/output/ThresholdingOutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>12</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>13</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getFile</mutatedMethod><methodDescription>()Ljava/io/File;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getFile to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>getStream</mutatedMethod><methodDescription>()Ljava/io/OutputStream;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/output/DeferredFileOutputStream::getStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>isInMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>isInMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>10</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>6</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>thresholdReached</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::writeTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>18</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>19</block><killingTest>org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(org.apache.commons.io.output.DeferredFileOutputStreamTest)</killingTest><description>removed call to org/apache/commons/io/output/ByteArrayOutputStream::writeTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>20</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DeferredFileOutputStream.java</sourceFile><mutatedClass>org.apache.commons.io.output.DeferredFileOutputStream</mutatedClass><mutatedMethod>writeTo</mutatedMethod><methodDescription>(Ljava/io/OutputStream;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>21</block><killingTest/><description>removed call to org/apache/commons/io/IOUtils::closeQuietly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>5</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>20</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>21</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;)Z</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>23</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>13</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>14</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WildcardFilter.java</sourceFile><mutatedClass>org.apache.commons.io.filefilter.WildcardFilter</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/lang/String;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>16</block><killingTest>org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(org.apache.commons.io.filefilter.FileFilterTestCase)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>14</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>12</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>14</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>13</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>86</index><block>15</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/io/File;Ljava/io/File;)I</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>16</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testReverseComparator(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SizeFileComparator.java</sourceFile><mutatedClass>org.apache.commons.io.comparator.SizeFileComparator</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>17</block><killingTest>org.apache.commons.io.comparator.SizeFileComparatorTest.testToString(org.apache.commons.io.comparator.SizeFileComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/io/comparator/SizeFileComparator::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>5</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/OutputStream;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>12</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(org.apache.commons.io.CopyUtilsTest)</killingTest><description>removed call to java/io/OutputStreamWriter::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>CopyUtils.java</sourceFile><mutatedClass>org.apache.commons.io.CopyUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/Reader;Ljava/io/Writer;)I</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>8</block><killingTest>org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(org.apache.commons.io.CopyUtilsTest)</killingTest><description>Repla